import numpy as np

# MATCH = 1
# MISMATCH = -1
# GAP = -2

MATCH = 5
MISMATCH = -3
GAP = -3

def needleman_wunsch(seq1, seq2):
  # criação da matriz principal e de uma matriz auxiliar
  matriz = np.zeros((len(seq1)+1, len(seq2)+1))

  aux_match = np.zeros((len(seq1), len(seq2)))

  # Preencher matriz auxiliar de acordo com os match ou mismatch
  for i in range(len(seq1)):
    for j in range(len(seq2)):
      if seq1[i] == seq2[j]:
        aux_match[i][j] = MATCH
      else:
        aux_match[i][j] = MISMATCH

  # print(aux_match)

  # Preencher a matriz principal de acordo com o algoritmo de Needleman Wunsch
  # Inicialização
  for i in range(len(seq1)+1):
    matriz[i][0] = GAP * i
  for j in range(len(seq2)+1):
    matriz[0][j] = GAP * j
  
  # Preenchimento da matriz
  for i in range(1, len(seq1)+1):
    for j in range(1, len(seq2)+1):
      matriz[i][j] = max(matriz[i-1][j-1] + aux_match[i-1][j-1], 
                        matriz[i-1][j] + GAP, 
                        matriz[i][j-1] + GAP)

  # print(matriz)

  # Fazer o traceback
  alinhada1 = ""
  alinhada2 = ""
  score = 0

  tam_seq1 = len(seq1)
  tam_seq2 = len(seq2)

  while(tam_seq1 > 0 and tam_seq2 > 0):

    print(seq1[tam_seq1-1], seq2[tam_seq2-1], aux_match[tam_seq1-1][tam_seq2-1])

    if tam_seq1 > 0 and tam_seq2 > 0 and matriz[tam_seq1][tam_seq2] == matriz[tam_seq1-1][tam_seq2-1] + aux_match[tam_seq1-1][tam_seq2-1]:
      
      alinhada1 = seq1[tam_seq1-1] + alinhada1
      alinhada2 = seq2[tam_seq2-1] + alinhada2
      
      tam_seq1 -= 1
      tam_seq2 -= 1

      # print(seq1[tam_seq1-1], seq2[tam_seq2-1], aux_match[tam_seq1-1][tam_seq2-1])

      if seq1[tam_seq1-1] == seq2[tam_seq2-1]:
        score += MATCH
      else:
        score += MISMATCH

    elif tam_seq1 > 0 and matriz[tam_seq1][tam_seq2] == matriz[tam_seq1-1, tam_seq2] + GAP:
      
      alinhada1 = seq1[tam_seq1-1] + alinhada1
      alinhada2 = "-" + alinhada2
      tam_seq1 -= 1

      # print(seq1[tam_seq1-1], seq2[tam_seq2-1], aux_match[tam_seq1-1][tam_seq2-1])

      score += GAP

    else:
      alinhada1 = "-" + alinhada1
      alinhada2 = seq2[tam_seq2-1] + alinhada2
      tam_seq2 -= 1

      # print(seq1[tam_seq1-1], seq2[tam_seq2-1], aux_match[tam_seq1-1][tam_seq2-1])

      score += GAP

  return alinhada1, alinhada2, score

if __name__ == "__main__":
  # pegar as sequencias
  # sequencia1 = input("Sequência 1: ")
  # sequencia2 = input("Sequência 2: ")

  sequencia1 = "TCGATTA"
  sequencia2 = "CGTGCA"

  # sequencia1 = "ATCGT"
  # sequencia2 = "ACGT"

  # sequencia1 = "ATGTGGGCATCGTTACTGTCAGTAGTGACTCTTTTGTTTGCTTTAAGTGAATGTAGTATAGTAGGTGAAAATTACACATACTATTACCAGAGTCAGTTTAGGCCGCCTAATGGCTGGCATAAACATGGTGGAGCCTATCTTGTAACCAATGAAACTGACATATCCTATAATGGTGTGTCTTGTACTGTGGGTACAATAAAAGGCGGCATTGTCATTAATGAGAGTGCTATATCTTTTGTTACAAAAACACCCATTGCTTGGTCAGCCAACGGCGTTTGCACTACATATTGTAATTACTCCAGCTTATATGTGTTTGTTACCCATTGTGGGGGCAGCGGACATACTAGTTGTATTAAAATACAAATCGCATAGGCGAGATTGTTTTAGGTGTTAAAGACTTTTCTGGTAACTGGATTTATAATCGTACTATAAAGGCTATTGGTCCGTATAGTAAATTTACAGCCTGGCAATGTCTTGCTAATTTTACCAGTGTGTTTCTAAACGGCAACCTTGTGTATAGTTCTAACTTTACGGAGGATGTTGCAGCGGGTGGTGTTTATGCTAAAAGCGTCAATGGTCTAAAACGTAGAATTATGAAGGACACTGATGTTTTGGCATATTTTGTAAATGGCACTGCTGTTGAAGTGATTGTTTGTGATGACAGCCCTAGAGGTAGGTTAGCATGTCAGTATAATACAGGAAATTTTACTGATGGGTTATACCCTTTCGTAAGTTACAATGTAGTTAATAATAGTGTTGTTGTTTATGAGGTTATTAGTACTACAACTTATGGTAAACTTAACAACATTACTTTTCATAATGAAACTGGTGCACCACCTGCAGGTTCTAATGTTGCTAATTTTATTAAATATCAGACGCATGTGGTGCCTGAAGGTTTTGTTAGGCTCAATTTTTCTTTCTTGTCTACTTACAGGTATCAGGAGTCTGATTTTACTTATGGTTCTTATCATAAGGCTTGTAATTTTAGACTAGAAAGTATTAATAATGGTTTAATGTTTAATACTTTAAGTGTTTCTATTAGCTATGGACCACTTAAGGGTTCTTGTAAGCAGTCAGTATTTAATCGTAAAGCAACATGCTGTTATGCCTATAAATATCCCACTAATGGGGTTCAAGAGTGTAAGGGTGTTTATAATGGAGAACGCAATACTAAATTTGAATGCGGGCTTCTTGTATTTATAGACAAGACTGATGGTTCACGCATAATAACTGCAGAAAAACCACCTGTTTATACTACTAATTTTACTAATAATATTGTTGTTGGTAAGTGTGTTAATTATAATATTTATGGCAGGTATGGCCAAGGCGTCATTAGTAATATAACTACTGAAGCATTTGGATTTTTACAGGGAGATGGTTTGGTCATCTTGGACACTGCTGGTTCTATAGATATTTTTTCTGTTAAGGATGGGCCACTCACACATTATTACAAAATTAATCCTTGTAATGATGTAAATCAACAATATGTAGTGTCAGGAGGAAATATAGTTGGTCTTCTCACATCTAGTAATGAGACTGGCTCTATTCAGTTAGAAGATCAGTTTTATATTAAACTCACTAATAGCACTCGTAGGCATAGGAGA"
  # sequencia2 = "ATGTTGGCACAGTTACTGTTAGCAGTGACTCTTTTGTCTGCTTTAGGTGAATGTAGTATAGTAGGTGAAAATTACACATACTATTACCAGAGTCAGTTTAGACCGCCTAATGGCTGGCATAAACATGGTGGAGCCTATCTTGTAGTTAATGAAACTGATATATCCTATGATGCTGCGTCTTGTACTGTGGGTACAATAAAAGGCGGCATTGTCATTAATGAGAGTGCTATATCTTTTGTTACTAAAACACCTATTGCTTGGTCAGCTCAAGGCGTTTGCACTACATATTGTAATTATTCCAGCCTATATGTGTTTGTAACCCATTGTGGGGGCCGTGGACATAATAGTTGTATTATAAATACAAATCGCATAGGCGAGATTGTTTTAGGTGTTAAATCCTTTTCTGGTAACTGGATTTATAATCGCACTATACAGGCTACTGGTCCGTATAGTAAATTTACAGCCTGGCAATGTCTTGCTAATTTTACCAGTGTGTTTCTAAATGGCAACCTTGTGTATAGTTCTAACTTTACGGAGGATGTTGCAGCGGCTGGTGTTTATGCTAAAACAGTCAATGGTCTAAAACGTAGAATTATGAAGGACACTGATGTTTTGGCATATTTTGTAAATGGCACTGCTGTTGAAGTGATTGTTTGTGATGACAACCCTAAAGGTAGGTTAGCATGTCAGTATAATACAGGAAATTTTACTGATGGGTTATACCCTTTCGTAAGTAATAATGTAGTTAATGATAGTGTTGTTGTTTATGATGTTATTAGTACTACAACTTATGGTAAACTTAACAACATTACTTTCCATAATGAAACTAGTGCACCACCTGCAGGTTCTAATGTTGCTAATTTTATTAAATATCAGACGCATGTGTTGCCTGAAGGTTTTGTTAGGCTTAATTTTTCTTTCTTGTCTACTTACAGGTATCAGGAGTCTGATTTTACTTATGGTTCTTATCATAAGGCTTGTAATTTTAGACTAGAAAGTATTAATAATGGTTTAATGTTTAATACTTTAAGTGTTTCTATTAGCTATGGACCACTTAAGGGTTCTTGTAAGCAGTCAGTGTTTAATCATAAAGCAACGTGCTGTTATGCCTATAAATATCCCACTAATGGGGTTCAAGAGTGTAAGGGTGTTTATAATGGAGAACGCAATACTAAATTTGAATGCGGGCTTCTTGTATTTATAGACAAGACTGATGGTTCACGCATAATAACTGCAGAAAAACCACCTGTTTATACTACTAATTTTACTAATAATATTGTTGTTGGTAAGTGTGTTAATTATAATATTTATGGTAGGTATGGCCAAGGCGTCATTAGTAATGTAACTACTGAAGCATTTGGTTTTTTAGAGGGAGATGGTTTGGTCATCTTGGACACTGCTGGTTCTATAGATATTTTTGTTGTTAGGGATGGTCCATTCACACATTATTACAAGATTAATCCTTGTAATGATGTAAATCAACAATATGTAGTGTCAGGAGGAAATATAGTTGGTCTTCTCACATCTAGTAATGAGACTGGCTCTATTCAGTTAGAAGATCAGTTTTATATTAAACTCACTAATAGCACCCGTAGGCATCGGAGA"

  alinhada1, alinhada2, score = needleman_wunsch(sequencia1, sequencia2)

  print("Sequência 1: " + sequencia1)
  print("Sequência 2: " + sequencia2)

  print("Alinhamento: ")
  print(alinhada1)
  print(alinhada2)
  print("Score: " + str(score))